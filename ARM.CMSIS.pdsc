<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.7.7" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="https://raw.githubusercontent.com/Open-CMSIS-Pack/Open-CMSIS-Pack-Spec/v1.7.7/schema/PACK.xsd">
  <name>CMSIS</name>
  <description>CMSIS (Common Microcontroller Software Interface Standard)</description>
  <vendor>ARM</vendor>
  <!-- <license>license.txt</license> -->
  <url>https://www.keil.com/pack/</url>

  <releases>
    <release version="6.0.0">
      Active development ...
      CMSIS-Core(M): 5.7.0
       - Added new compiler macros.
      CMSIS-Core(A): 1.2.1
      CMSIS-DSP: Moved into separate pack!
      CMSIS-NN: Moved into separate pack!
      CMSIS-RTOS: Deprecated and removed!
        - RTX4 Deprecated and removed!
      CMSIS-RTOS2: 2.1.3 (unchanged)
        - RTX5 Moved into separate pack!
      CMSIS-DAP: Moved into separate pack!
      CMSIS-Pack: Moved to Open-CMSIS-Pack!
      CMSIS-SVD: Moved to Open-CMSIS-Pack!
      Utilities: Moved to CMSIS-Toolbox!
    </release>
    <release version="5.9.0" date="2022-05-02">
      CMSIS-Core(M): 5.6.0
       - Arm Cortex-M85 cpu support
       - Arm China STAR-MC1 cpu support
       - Updated system_ARMCM55.c
      CMSIS-DSP: 1.10.0 (see revision history for details)
      CMSIS-NN: 3.1.0 (see revision history for details)
       - Support for int16 convolution and fully connected for reference implementation
       - Support for DSP extension optimization for int16 convolution and fully connected
       - Support dilation for int8 convolution
       - Support dilation for int8 depthwise convolution
       - Support for int16 depthwise conv for reference implementation including dilation
       - Support for int16 average and max pooling for reference implementation
       - Support for elementwise add and mul int16 scalar version
       - Support for softmax int16 scalar version
       - Support for SVDF with 8 bit state tensor
      CMSIS-RTOS2: 2.1.3 (unchanged)
        - RTX 5.5.4 (see revision history for details)
      CMSIS-Pack: deprecated (moved to Open-CMSIS-Pack)
      CMSIS-SVD: 1.3.9 (see revision history for details)
      CMSIS-DAP: 2.1.1 (see revision history for details)
       - Allow default clock frequency to use fast clock mode
      Devices
       - Support for Cortex-M85
      Utilities
        - SVDConv 3.3.42
        - PackChk 1.3.95
    </release>
    <release version="5.8.0" date="2021-06-24">
      CMSIS-Core(M): 5.5.0 (see revision history for details)
        - Updated GCC LinkerDescription, GCC Assembler startup
        - Added Armv8-M Stack Sealing (to linker, startup) for toolchain ARM, GCC
        - Changed C-Startup to default Startup.
        - Updated Armv8-M Assembler startup to use GAS syntax
          Note: Updating existing projects may need manual user interaction!
      CMSIS-Core(A): 1.2.1 (see revision history for details)
        - Bugfixes for Cortex-A32
      CMSIS-DAP: 2.1.0 (see revision history for details)
        - Enhanced DAP_Info
        - Added extra UART support
      CMSIS-DSP: 1.9.0 (see revision history for details)
        - Purged pre-built libs from Git
        - Enhanced support for f16 datatype
        - Fixed couple of GCC issues
      CMSIS-NN: 3.0.0 (see revision history for details including version 2.0.0)
        - Major interface change for functions compatible with TensorFlow Lite for Microcontroller
        - Added optimization for SVDF kernel
        - Improved MVE performance for fully Connected and max pool operator
        - NULL bias support for fully connected operator in non-MVE case(Can affect performance)
        - Expanded existing unit test suite along with support for FVP
        - Removed Examples folder
      CMSIS-RTOS2:
        - RTX 5.5.3 (see revision history for details)
          - CVE-2021-27431 vulnerability mitigation.
          - Enhanced stack overrun checking.
          - Various bug fixes and improvements.
      CMSIS-Pack: 1.7.2 (see revision history for details)
        - Support for Microchip XC32 compiler
        - Support for Custom Datapath Extension
    </release>
    <release version="5.7.0" date="2020-04-09">
      CMSIS-Build: 0.9.0 (beta)
        - Draft for CMSIS Project description (CPRJ)
      CMSIS-Core(M): 5.4.0 (see revision history for details)
        - Cortex-M55 cpu support
        - Enhanced MVE support for Armv8.1-MML
        - Fixed device config define checks.
        - L1 Cache functions for Armv7-M and later
      CMSIS-Core(A): 1.2.0 (see revision history for details)
        - Fixed GIC_SetPendingIRQ to use GICD_SGIR
        - Added missing DSP intrinsics
        - Reworked assembly intrinsics: volatile, barriers and clobber
      CMSIS-DSP: 1.8.0 (see revision history for details)
        - Added new functions and function groups
        - Added MVE support
      CMSIS-NN: 1.3.0 (see revision history for details)
        - Added MVE support
        - Further optimizations for kernels using DSP extension
      CMSIS-RTOS2:
        - RTX 5.5.2 (see revision history for details)
      CMSIS-Driver: 2.8.0
        - Added VIO API 0.1.0 (Preview)
        - removed volatile from status related typedefs in APIs
        - enhanced WiFi Interface API with support for polling Socket Receive/Send
      CMSIS-Pack: 1.6.3 (see revision history for details)
        - deprecating all types specific to cpdsc format. Cpdsc is replaced by Cprj with dedicated schema.
      Devices:
        - ARMCM55 device
        - ARMv81MML startup code recognizing __MVE_USED macro
        - Refactored vector table references for all Cortex-M devices
        - Reworked ARMCM* C-StartUp files.
        - Include L1 Cache functions in ARMv8MML/ARMv81MML devices
      Utilities:
        Attention: Linux binaries moved to Linux64 folder!
        - SVDConv 3.3.35
        - PackChk 1.3.89
    </release>
    <release version="5.6.0" date="2019-07-10">
      CMSIS-Core(M): 5.3.0 (see revision history for details)
        - Added provisions for compiler-independent C startup code.
      CMSIS-Core(A): 1.1.4 (see revision history for details)
        - Fixed __FPU_Enable.
      CMSIS-DSP: 1.7.0 (see revision history for details)
        - New Neon versions of f32 functions
        - Python wrapper
        - Preliminary cmake build
        - Compilation flags for FFTs
        - Changes to arm_math.h
      CMSIS-NN: 1.2.0 (see revision history for details)
        - New function for depthwise convolution with asymmetric quantization.
        - New support functions for requantization.
      CMSIS-RTOS:
        - RTX 4.82.0 (updated provisions for Arm Compiler 6 when using Cortex-M0/M0+)
      CMSIS-RTOS2:
        - RTX 5.5.1 (see revision history for details)
      CMSIS-Driver: 2.7.1
        - WiFi Interface API 1.0.0
      Devices:
        - Generalized C startup code for all Cortex-M family devices.
        - Updated Cortex-A default memory regions and MMU configurations
        - Moved Cortex-A memory and system config files to avoid include path issues
    </release>
    <release version="5.5.1" date="2019-03-20">
      The following folders are deprecated
        - CMSIS/include/ (superseded by CMSIS/DSP/include/ and core_m/include/)

      CMSIS-Core(M): 5.2.1 (see revision history for details)
        - Fixed compilation issue in cmsis_armclang_ltm.h
    </release>
    <release version="5.5.0" date="2019-03-18">
      The following folders have been removed:
        - CMSIS/Lib/ (superseded by CMSIS/DSP/Lib/)
        - CMSIS/DSP_Lib/ (superseded by CMSIS/DSP/)
      The following folders are deprecated
        - CMSIS/include/ (superseded by CMSIS/DSP/include/ and core_m/include/)

      CMSIS-Core(M): 5.2.0 (see revision history for details)
        - Reworked Stack/Heap configuration for ARM startup files.
        - Added Cortex-M35P device support.
        - Added generic Armv8.1-M Mainline device support.
      CMSIS-Core(A): 1.1.3 (see revision history for details)
      CMSIS-DSP: 1.6.0 (see revision history for details)
        - reworked DSP library source files
        - reworked DSP library documentation
        - Changed DSP folder structure
        - moved DSP libraries to folder ./DSP/Lib
        - ARM DSP Libraries are built with ARMCLANG
        - Added DSP Libraries Source variant
      CMSIS-RTOS2:
        - RTX 5.5.0 (see revision history for details)
      CMSIS-Driver: 2.7.0
        - Added WiFi Interface API 1.0.0-beta
        - Added components for project specific driver implementations
      CMSIS-Pack: 1.6.0 (see revision history for details)
      Devices:
        - Added Cortex-M35P and ARMv81MML device templates.
        - Fixed C-Startup Code for GCC (aligned with other compilers)
      Utilities:
        - SVDConv 3.3.25
        - PackChk 1.3.82
    </release>
    <release version="5.4.0" date="2018-08-01">
      Aligned pack structure with repository.
      The following folders are deprecated:
        - CMSIS/include/
        - CMSIS/DSP_Lib/

      CMSIS-Core(M): 5.1.2 (see revision history for details)
        - Added Cortex-M1 support (beta).
      CMSIS-Core(A): 1.1.2 (see revision history for details)
      CMSIS-NN: 1.1.0
        - Added new math functions.
      CMSIS-RTOS2:
        - API 2.1.3 (see revision history for details)
        - RTX 5.4.0 (see revision history for details)
          * Updated exception handling on Cortex-A
      CMSIS-Driver:
        - Flash Driver API V2.2.0
      Utilities:
        - SVDConv 3.3.21
        - PackChk 1.3.71
    </release>
    <release version="5.3.0" date="2018-02-22">
      Updated Arm company brand.
      CMSIS-Core(M): 5.1.1 (see revision history for details)
      CMSIS-Core(A): 1.1.1 (see revision history for details)
      CMSIS-DAP: 2.0.0 (see revision history for details)
      CMSIS-NN: 1.0.0
        - Initial contribution of the bare metal Neural Network Library.
      CMSIS-RTOS2:
        - RTX 5.3.0 (see revision history for details)
        - OS Tick API 1.0.1
    </release>
    <release version="5.2.0" date="2017-11-16">
      CMSIS-Core(M): 5.1.0 (see revision history for details)
        - Added MPU Functions for ARMv8-M for Cortex-M23/M33.
        - Added compiler_iccarm.h to replace compiler_iar.h shipped with the compiler.
      CMSIS-Core(A): 1.1.0 (see revision history for details)
        - Added compiler_iccarm.h.
        - Added additional access functions for physical timer.
      CMSIS-DAP: 1.2.0 (see revision history for details)
      CMSIS-DSP: 1.5.2 (see revision history for details)
      CMSIS-Driver: 2.6.0 (see revision history for details)
        - CAN Driver API V1.2.0
        - NAND Driver API V2.3.0
      CMSIS-RTOS:
        - RTX: added variant for Infineon XMC4 series affected by PMU_CM.001 errata.
      CMSIS-RTOS2:
        - API 2.1.2 (see revision history for details)
        - RTX 5.2.3 (see revision history for details)
      Devices:
        - Added GCC startup and linker script for Cortex-A9.
        - Added device ARMCM0plus_MPU for Cortex-M0+ with MPU.
        - Added IAR startup code for Cortex-A9
    </release>
    <release version="5.1.1" date="2017-09-19">
      CMSIS-RTOS2:
      - RTX 5.2.1 (see revision history for details)
    </release>
    <release version="5.1.0" date="2017-08-04">
      CMSIS-Core(M): 5.0.2 (see revision history for details)
      - Changed Version Control macros to be core agnostic.
      - Added MPU Functions for ARMv7-M for Cortex-M0+/M3/M4/M7.
      CMSIS-Core(A): 1.0.0 (see revision history for details)
      - Initial release
      - IRQ Controller API 1.0.0
      CMSIS-Driver: 2.05 (see revision history for details)
      - All typedefs related to status have been made volatile.
      CMSIS-RTOS2:
      - API 2.1.1 (see revision history for details)
      - RTX 5.2.0 (see revision history for details)
      - OS Tick API 1.0.0
      CMSIS-DSP: 1.5.2 (see revision history for details)
      - Fixed GNU Compiler specific diagnostics.
      CMSIS-Pack: 1.5.0 (see revision history for details)
      - added System Description File (*.SDF) Format
      CMSIS-Zone: 0.0.1 (Preview)
      - Initial specification draft
    </release>
    <release version="5.0.1" date="2017-02-03">
      Package Description:
      - added taxonomy for Cclass RTOS
      CMSIS-RTOS2:
      - API 2.1   (see revision history for details)
      - RTX 5.1.0 (see revision history for details)
      CMSIS-Core: 5.0.1 (see revision history for details)
      - Added __PACKED_STRUCT macro
      - Added uVisior support
      - Updated cmsis_armcc.h: corrected macro __ARM_ARCH_6M__
      - Updated template for secure main function (main_s.c)
      - Updated template for Context Management for ARMv8-M TrustZone (tz_context.c)
      CMSIS-DSP: 1.5.1 (see revision history for details)
      - added ARMv8M DSP libraries.
      CMSIS-Pack:1.4.9 (see revision history for details)
      - added Pack Index File specification and schema file
    </release>
    <release version="5.0.0" date="2016-11-11">
      Changed open source license to Apache 2.0
      CMSIS_Core:
       - Added support for Cortex-M23 and Cortex-M33.
       - Added ARMv8-M device configurations for mainline and baseline.
       - Added CMSE support and thread context management for TrustZone for ARMv8-M
       - Added cmsis_compiler.h to unify compiler behaviour.
       - Updated function SCB_EnableICache (for Cortex-M7).
       - Added functions: NVIC_GetEnableIRQ, SCB_GetFPUType
      CMSIS-RTOS:
        - bug fix in RTX 4.82 (see revision history for details)
      CMSIS-RTOS2:
        - new API including compatibility layer to CMSIS-RTOS
        - reference implementation based on RTX5
        - supports all Cortex-M variants including TrustZone for ARMv8-M
      CMSIS-SVD:
       - reworked SVD format documentation
       - removed SVD file database documentation as SVD files are distributed in packs
       - updated SVDConv for Win32 and Linux
      CMSIS-DSP:
       - Moved DSP libraries from CMSIS/DSP/Lib to CMSIS/Lib.
       - Added DSP libraries build projects to CMSIS pack.
    </release>
    <release version="4.5.0" date="2015-10-28">
      - CMSIS-Core     4.30.0  (see revision history for details)
      - CMSIS-DAP      1.1.0   (unchanged)
      - CMSIS-Driver   2.04.0  (see revision history for details)
      - CMSIS-DSP      1.4.7   (no source code change [still labeled 1.4.5], see revision history for details)
      - CMSIS-Pack     1.4.1   (see revision history for details)
      - CMSIS-RTOS     4.80.0  Restored time delay parameter 'millisec' old behavior (prior V4.79) for software compatibility. (see revision history for details)
      - CMSIS-SVD      1.3.1   (see revision history for details)
    </release>
    <release version="4.4.0" date="2015-09-11">
      - CMSIS-Core     4.20   (see revision history for details)
      - CMSIS-DSP      1.4.6  (no source code change [still labeled 1.4.5], see revision history for details)
      - CMSIS-Pack     1.4.0  (adding memory attributes, algorithm style)
      - CMSIS-Driver   2.03.0 (adding CAN [Controller Area Network] API)
      - CMSIS-RTOS
        -- API         1.02   (unchanged)
        -- RTX         4.79   (see revision history for details)
      - CMSIS-SVD      1.3.0  (see revision history for details)
      - CMSIS-DAP      1.1.0  (extended with SWO support)
    </release>
    <release version="4.3.0" date="2015-03-20">
      - CMSIS-Core     4.10   (Cortex-M7 extended Cache Maintenance functions)
      - CMSIS-DSP      1.4.5  (see revision history for details)
      - CMSIS-Driver   2.02   (adding SAI (Serial Audio Interface) API)
      - CMSIS-Pack     1.3.3  (Semantic Versioning, Generator extensions)
      - CMSIS-RTOS
        -- API         1.02   (unchanged)
        -- RTX         4.78   (see revision history for details)
      - CMSIS-SVD      1.2    (unchanged)
    </release>
    <release version="4.2.0" date="2014-09-24">
      Adding Cortex-M7 support
      - CMSIS-Core     4.00  (Cortex-M7 support, corrected C++ include guards in core header files)
      - CMSIS-DSP      1.4.4 (Cortex-M7 support and corrected out of bound issues)
      - CMSIS-Pack     1.3.1 (Cortex-M7 updates, clarification, corrected batch files in Tutorial)
      - CMSIS-SVD      1.2   (Cortex-M7 extensions)
      - CMSIS-RTOS RTX 4.75  (see revision history for details)
    </release>
    <release version="4.1.1" date="2014-06-30">
      - fixed conditions preventing the inclusion of the DSP library in projects for Infineon XMC4000 series devices
    </release>
    <release version="4.1.0" date="2014-06-12">
      - CMSIS-Driver   2.02  (incompatible update)
      - CMSIS-Pack     1.3   (see revision history for details)
      - CMSIS-DSP      1.4.2 (unchanged)
      - CMSIS-Core     3.30  (unchanged)
      - CMSIS-RTOS RTX 4.74  (unchanged)
      - CMSIS-RTOS API 1.02  (unchanged)
      - CMSIS-SVD      1.10  (unchanged)
      PACK:
      - removed G++ specific files from PACK
      - added Component Startup variant "C Startup"
      - added Pack Checking Utility
      - updated conditions to reflect tool-chain dependency
      - added Taxonomy for Graphics
      - updated Taxonomy for unified drivers from "Drivers" to "CMSIS Drivers"
    </release>
    <!-- release version="4.0.0">
      - CMSIS-Driver   2.00  Preliminary (incompatible update)
      - CMSIS-Pack     1.1   Preliminary
      - CMSIS-DSP      1.4.2 (see revision history for details)
      - CMSIS-Core     3.30  (see revision history for details)
      - CMSIS-RTOS RTX 4.74  (see revision history for details)
      - CMSIS-RTOS API 1.02  (unchanged)
      - CMSIS-SVD      1.10  (unchanged)
    </release -->
    <release version="3.20.4" date="2014-02-20">
      - CMSIS-RTOS 4.74 (see revision history for details)
      - PACK Extensions (Boards, Device Features, Flash Programming, Generators, Configuration Wizard). Schema version 1.1.
    </release>
    <!-- release version="3.20.3">
      - CMSIS-Driver API Version 1.10 ARM prefix added (incompatible change)
      - CMSIS-RTOS 4.73 (see revision history for details)
    </release -->
    <!-- release version="3.20.2">
      - CMSIS-Pack documentation has been added
      - CMSIS-Drivers header and documentation have been added to PACK
      - CMSIS-CORE, CMSIS-DSP, CMSIS-RTOS API and CMSIS-SVD remain unchanged
    </release -->
    <!-- release version="3.20.1">
      - CMSIS-RTOS Keil RTX V4.72 has been added to PACK
      - CMSIS-CORE, CMSIS-DSP, CMSIS-RTOS API and CMSIS-SVD remain unchanged
    </release -->
    <!-- release version="3.20.0">
      The software portions that are deployed in the application program are now under a BSD license which allows usage
      of CMSIS components in any commercial or open source projects.  The Pack Description file Arm.CMSIS.pdsc describes the use cases
      The individual components have been update as listed below:
      - CMSIS-CORE adds functions for setting breakpoints, supports the latest GCC Compiler, and contains several corrections.
      - CMSIS-DSP library is optimized for more performance and contains several bug fixes.
      - CMSIS-RTOS API is extended with capabilities for short timeouts, Kernel initialization, and prepared for a C++ interface.
      - CMSIS-SVD is unchanged.
    </release -->
  </releases>

  <taxonomy>
    <description Cclass="Audio">Software components for audio processing</description>
    <description Cclass="Board Support">Generic Interfaces for Evaluation and Development Boards</description>
    <description Cclass="Board Part">Drivers that support an external component available on an evaluation board</description>
    <description Cclass="Compiler">Compiler Software Extensions</description>
    <description Cclass="CMSIS" doc="doc/general/index.html">Cortex Microcontroller Software Interface Components</description>
    <description Cclass="CMSIS Driver" doc="doc/driver/index.html">Unified Device Drivers compliant to CMSIS-Driver Specifications</description>
    <description Cclass="Device" doc="doc/core_m/index.html">Startup, System Setup</description>
    <description Cclass="Data Exchange">Data exchange or data formatter</description>
    <description Cclass="Extension Board">Drivers that support an extension board or shield</description>
    <description Cclass="File System">File Drive Support and File System</description>
    <description Cclass="IoT Client">IoT cloud client connector</description>
    <description Cclass="IoT Service">IoT specific services</description>
    <description Cclass="IoT Utility">IoT specific software utility</description>
    <description Cclass="Graphics">Graphical User Interface</description>
    <description Cclass="Network">Network Stack using Internet Protocols</description>
    <description Cclass="RTOS">Real-time Operating System</description>
    <description Cclass="Security">Encryption for secure communication or storage</description>
    <description Cclass="USB">Universal Serial Bus Stack</description>
    <description Cclass="Utility">Generic software utility components</description>
  </taxonomy>

  <devices>
    <!-- ******************************  Cortex-M0  ****************************** -->
    <family Dfamily="ARM Cortex M0" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui0497" title="Cortex-M0 Processor Devices Generic Users Guide"/>
      <description>
The Cortex-M0 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM0.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM0">
        <processor Dcore="Cortex-M0" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM0/include/ARMCM0.h" define="ARMCM0"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M0P  ****************************** -->
    <family Dfamily="ARM Cortex M0 plus" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui0662" title="Cortex-M0+ Processor Devices Generic Users Guide"/>
      <description>
The Cortex-M0+ processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM0P.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM0P">
        <processor Dcore="Cortex-M0+" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM0plus/include/ARMCM0plus.h" define="ARMCM0P"/>
      </device>

      <device Dname="ARMCM0P_MPU">
        <processor Dcore="Cortex-M0+" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM0plus/include/ARMCM0plus_MPU.h" define="ARMCM0P_MPU"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M1  ****************************** -->
    <family Dfamily="ARM Cortex M1" Dvendor="ARM:82">
      <!--book name="https://developer.arm.com/documentation/dui0497" title="Cortex-M0 Processor Devices Generic Users Guide"/-->
      <description>
The ARM Cortex-M1 FPGA processor is intended for deeply embedded applications that require a small processor integrated into an FPGA.
The ARM Cortex-M1 processor implements the ARMv6-M architecture profile.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM0.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM1">
        <processor Dcore="Cortex-M1" DcoreVersion="r1p0" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM1/include/ARMCM1.h" define="ARMCM1"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M3  ****************************** -->
    <family Dfamily="ARM Cortex M3" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui0552" title="Cortex-M3 Processor Devices Generic Users Guide"/>
      <description>
The Cortex-M3 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM3.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM3">
        <processor Dcore="Cortex-M3" DcoreVersion="r2p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM3/include/ARMCM3.h" define="ARMCM3"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M4  ****************************** -->
    <family Dfamily="ARM Cortex M4" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui0553" title="Cortex-M4 Processor Devices Generic Users Guide"/>
      <description>
The Cortex-M4 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM4.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM4">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM4/include/ARMCM4.h"    define="ARMCM4"/>
      </device>

      <device Dname="ARMCM4_FP">
        <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM4/include/ARMCM4_FP.h" define="ARMCM4_FP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M7  ****************************** -->
    <family Dfamily="ARM Cortex M7" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui0646" title="Cortex-M7 Processor Devices Generic Users Guide"/>
      <description>
The Cortex-M7 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
- upward compatibility with the rest of the Cortex-M processor family.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM7.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM7">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM7/include/ARMCM7.h" define="ARMCM7"/>
      </device>

      <device Dname="ARMCM7_SP">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM7/include/ARMCM7_SP.h" define="ARMCM7_SP"/>
      </device>

      <device Dname="ARMCM7_DP">
        <processor Dcore="Cortex-M7" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM7/include/ARMCM7_DP.h" define="ARMCM7_DP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M23  ********************** -->
    <family Dfamily="ARM Cortex M23" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/dui1095"       title="Cortex-M23 Processor Devices Generic Users Guide"/>
      <description>
The Arm Cortex-M23 is based on the Armv8-M baseline architecture.
It is the smallest and most energy efficient Arm processor with Arm TrustZone technology.
Cortex-M23 is the ideal processor for constrained embedded applications requiring efficient security.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM23.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM23">
        <processor Dcore="Cortex-M23" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM23/include/ARMCM23.h" define="ARMCM23"/>
      </device>

      <device Dname="ARMCM23_TZ">
        <processor Dcore="Cortex-M23" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMCM23/include/ARMCM23_TZ.h" define="ARMCM23_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M33  ****************************** -->
    <family Dfamily="ARM Cortex M33" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/100235"       title="Cortex-M33 Processor Devices Generic Users Guide"/>
      <description>
The Arm Cortex-M33 is the most configurable of all Cortex-M processors. It is a full featured microcontroller
class processor based on the Armv8-M mainline architecture with Arm TrustZone security.
      </description>
      <!-- debug svd="device/arm/SVD/ARMCM33.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"          default="1"/-->

      <device Dname="ARMCM33">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, no TrustZone
        </description>
        <compile header="device/arm/ARMCM33/include/ARMCM33.h" define="ARMCM33"/>
      </device>

      <device Dname="ARMCM33_TZ">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMCM33/include/ARMCM33_TZ.h" define="ARMCM33_TZ"/>
      </device>

      <device Dname="ARMCM33_DSP_FP">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, no TrustZone
        </description>
        <compile header="device/arm/ARMCM33/include/ARMCM33_DSP_FP.h" define="ARMCM33_DSP_FP"/>
      </device>

      <device Dname="ARMCM33_DSP_FP_TZ">
        <processor Dcore="Cortex-M33" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMCM33/include/ARMCM33_DSP_FP_TZ.h" define="ARMCM33_DSP_FP_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M35P  ****************************** -->
    <family Dfamily="ARM Cortex M35P" Dvendor="ARM:82">
      <!--book name="device/arm/Documents/??_dgug.pdf"       title="?? Device Generic Users Guide"/-->
      <description>
The Arm Cortex-M35P is the most configurable of all Cortex-M processors. It is a full featured microcontroller
class processor based on the Armv8-M mainline architecture with Arm TrustZone security designed for a broad range of secure embedded applications.
      </description>

      <!-- debug svd="device/arm/SVD/ARMCM35P.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"          default="1"/-->

      <device Dname="ARMCM35P">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, no TrustZone
        </description>
        <compile header="device/arm/ARMCM35P/include/ARMCM35P.h" define="ARMCM35P"/>
      </device>

      <device Dname="ARMCM35P_TZ">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMCM35P/include/ARMCM35P_TZ.h" define="ARMCM35P_TZ"/>
      </device>

      <device Dname="ARMCM35P_DSP_FP">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="NO_TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, no TrustZone
        </description>
        <compile header="device/arm/ARMCM35P/include/ARMCM35P_DSP_FP.h" define="ARMCM35P_DSP_FP"/>
      </device>

      <device Dname="ARMCM35P_DSP_FP_TZ">
        <processor Dcore="Cortex-M35P" DcoreVersion="r0p0" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMCM35P/include/ARMCM35P_DSP_FP_TZ.h" define="ARMCM35P_DSP_FP_TZ"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M55  ****************************** -->
    <family Dfamily="ARM Cortex M55" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/101273"       title="Cortex-M55 Processor Devices Generic Users Guide"/>
      <description>
The Arm Cortex-M55 processor is a fully synthesizable, mid-range, microcontroller-class processor that implements the Armv8.1-M mainline architecture and includes support for the M-profile Vector Extension (MVE), also known as Arm Helium technology.
It is Arm's most AI-capable Cortex-M processor, delivering enhanced, energy-efficient digital signal processing (DSP) and machine learning (ML) performance.
The Cortex-M55 processor achieves high compute performance across scalar and vector operations, while maintaining low energy consumption.
      </description>

      <!-- debug svd="device/arm/SVD/ARMCM55.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00000000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x30000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20000000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM55">
        <processor Dcore="Cortex-M55" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dmve="FP_MVE" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          Floating Point Vector Extensions, DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMCM55/include/ARMCM55.h" define="ARMCM55"/>
      </device>
    </family>

    <!-- ******************************  Cortex-M85  ****************************** -->
    <family Dfamily="ARM Cortex M85" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/1019283"       title="Cortex-M85 Processor Devices Generic Users Guide"/>
      <description>
The Arm Cortex-M85 processor is a fully synthesizable high-performance microcontroller class processor that implements the Armv8.1-M Mainline architecture which includes support for the M-profile Vector Extension (MVE).
The processor also supports previous Armv8-M architectural features.
The design is focused on compute applications such as Digital Signal Processing (DSP) and machine learning.
The Arm Cortex-M85 processor is energy efficient and achieves high compute performance across scalar and vector operations while maintaining low power consumption.
      </description>

      <!-- debug svd="device/arm/SVD/ARMCM85.svd"/ SVD files do not contain any peripheral -->
      <memory name="ROM_NS" access="rxn"  start="0x00000000" size="0x00200000" startup="1" default="1" alias="ROM_S"/>
      <memory name="RAM_NS" access="rwxn" start="0x20000000" size="0x00020000" init   ="0" default="1" alias="RAM_S"/>
      <memory name="ROM_S"  access="rxn"  start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory name="RAM_S"  access="rwxn" start="0x30000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMCM85">
        <processor Dcore="Cortex-M85" DcoreVersion="r0p0" Dpacbti="PACBTI" Dmpu="MPU" Dfpu="DP_FPU" Dmve="FP_MVE" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          Floating Point Vector Extensions, DSP Instructions, Double Precision Floating Point Unit, TrustZone, PACBTI
        </description>
        <compile header="device/arm/ARMCM85/include/ARMCM85.h" define="ARMCM85"/>
      </device>
    </family>

    <!-- ******************************  ARMSC000  ****************************** -->
    <family Dfamily="ARM SC000" Dvendor="ARM:82">
      <description>
The Arm SC000 processor is an entry-level 32-bit Arm Cortex processor designed for a broad range of secure embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
      </description>
      <!-- debug svd="device/arm/SVD/ARMSC000.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMSC000">
        <processor Dcore="SC000" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMSC000/include/ARMSC000.h" define="ARMSC000"/>
      </device>
    </family>

    <!-- ******************************  ARMSC300  ****************************** -->
    <family Dfamily="ARM SC300" Dvendor="ARM:82">
      <description>
The ARM SC300 processor is an entry-level 32-bit ARM Cortex processor designed for a broad range of secure embedded applications. It offers significant benefits to developers, including:
- simple, easy-to-use programmers model
- highly efficient ultra-low power operation
- excellent code density
- deterministic, high-performance interrupt handling
      </description>
      <!-- debug svd="device/arm/SVD/ARMSC300.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00040000" startup="1" default="1"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMSC300">
        <processor Dcore="SC300" DcoreVersion="r0p1" Dfpu="NO_FPU" Dmpu="NO_MPU" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMSC300/include/ARMSC300.h" define="ARMSC300"/>
      </device>
    </family>

    <!-- ******************************  ARMv8-M Baseline  ********************** -->
    <family Dfamily="ARMv8-M Baseline" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/ddi0553"       title="Armv8-M Architecture Reference Manual"/>
      <description>
Armv8-M Baseline based device with TrustZone
      </description>
      <!-- debug svd="device/arm/SVD/ARMv8MBL.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMv8MBL">
        <processor Dcore="ARMV8MBL" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <compile header="device/arm/ARMv8MBL/include/ARMv8MBL.h" define="ARMv8MBL"/>
      </device>
    </family>

    <!-- ******************************  ARMv8-M Mainline  ****************************** -->
    <family Dfamily="ARMv8-M Mainline" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/ddi0553"       title="Armv8-M Architecture Reference Manual"/>
      <description>
Armv8-M Mainline based device with TrustZone
      </description>
      <!-- debug svd="device/arm/SVD/ARMv8MML.svd"/ SVD files do not contain any peripheral -->
      <memory id="IROM1"                                start="0x00000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00200000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x20000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20200000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->

      <device Dname="ARMv8MML">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML.h" define="ARMv8MML"/>
      </device>

      <device Dname="ARMv8MML_DSP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p0" Dfpu="NO_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, no Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML_DSP.h" define="ARMv8MML_DSP"/>
      </device>

      <device Dname="ARMv8MML_SP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML_SP.h" define="ARMv8MML_SP"/>
      </device>

      <device Dname="ARMv8MML_DSP_SP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="SP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Single Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML_DSP_SP.h" define="ARMv8MML_DSP_SP"/>
      </device>

      <device Dname="ARMv8MML_DP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Ddsp="NO_DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          no DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML_DP.h" define="ARMv8MML_DP"/>
      </device>

      <device Dname="ARMv8MML_DSP_DP">
        <processor Dcore="ARMV8MML" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv8MML/include/ARMv8MML_DSP_DP.h" define="ARMv8MML_DSP_DP"/>
      </device>
    </family>

    <!-- ******************************  ARMv8.1-M Mainline  ****************************** -->
    <family Dfamily="ARMv8.1-M Mainline" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/ddi0553"       title="Armv8-M Architecture Reference Manual"/>
      <description>
Armv8.1-M Mainline based device with TrustZone and MVE
      </description>
      <!-- <debug svd="device/arm/SVD/ARMv8MML.svd"/> -->
      <memory id="IROM1"                                start="0x10000000" size="0x00200000" startup="1" default="1"/>
      <memory id="IROM2"                                start="0x00000000" size="0x00200000" startup="0" default="0"/>
      <memory id="IRAM1"                                start="0x30000000" size="0x00020000" init   ="0" default="1"/>
      <memory id="IRAM2"                                start="0x20000000" size="0x00020000" init   ="0" default="0"/>
      <!--algorithm name="device/template/flash/NEW_DEVICE.FLM" start="0x00000000" size="0x00040000"             default="1"/-->


      <device Dname="ARMv81MML_DSP_DP_MVE_FP">
        <processor Dcore="ARMV81MML" DcoreVersion="r0p0" Dfpu="DP_FPU" Dmpu="MPU" Dmve="FP_MVE" Ddsp="DSP" Dtz="TZ" Dendian="Configurable" Dclock="10000000"/>
        <description>
          Double Precision Vector Extensions, DSP Instructions, Double Precision Floating Point Unit, TrustZone
        </description>
        <compile header="device/arm/ARMv81MML/include/ARMv81MML_DSP_DP_MVE_FP.h" define="ARMv81MML_DSP_DP_MVE_FP"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A5  ****************************** -->
    <family Dfamily="ARM Cortex A5" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/ddi0433" title="Cortex-A5 Technical Reference Manual"/>
      <description>
The Arm Cortex-A5 processor is a high-performance, low-power, Arm macrocell with an L1 cache subsystem that provides full
virtual memory capabilities. The Cortex-A5 processor implements the Armv7-A architecture profile and can execute 32-bit
Arm instructions and 16-bit and 32-bit Thumb instructions. The Cortex-A5 is the smallest member of the Cortex-A processor family.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA5">
        <processor Dcore="Cortex-A5" DcoreVersion="r0p1" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="device/arm/ARMCA5/include/ARMCA5.h" define="ARMCA5"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A7  ****************************** -->
    <family Dfamily="ARM Cortex A7" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/ddi0464" title="Cortex-A7 MPCore Technical Reference Manual"/>
      <description>
The Cortex-A7 MPCore processor is a high-performance, low-power processor that implements the Armv7-A architecture.
The Cortex-A7 MPCore processor has one to four processors in a single multiprocessor device with a L1 cache subsystem,
an optional integrated GIC, and an optional L2 cache controller.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA7">
        <processor Dcore="Cortex-A7" DcoreVersion="r0p5" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="device/arm/ARMCA7/include/ARMCA7.h" define="ARMCA7"/>
      </device>
    </family>

    <!-- ******************************  Cortex-A9  ****************************** -->
    <family Dfamily="ARM Cortex A9" Dvendor="ARM:82">
      <book name="https://developer.arm.com/documentation/100511" title="Cortex-A9 Technical Reference Manual"/>
      <description>
The Cortex-A9 processor is a high-performance, low-power, Arm macrocell with an L1 cache subsystem that provides full virtual memory capabilities.
The Cortex-A9 processor implements the Armv7-A architecture and runs 32-bit Arm instructions, 16-bit and 32-bit Thumb instructions,
and 8-bit Java bytecodes in Jazelle state.
      </description>

      <memory id="IROM1"                                start="0x00000000" size="0x04000000" startup="1" default="1"/> <!-- 64MB NOR -->
      <memory id="IROM2"                                start="0x0C000000" size="0x04000000" startup="0" default="0"/> <!-- 64MB NOR -->
      <memory id="IRAM1"                                start="0x14000000" size="0x02000000" init   ="0" default="1"/> <!-- 32MB SRAM -->
      <memory id="IRAM2"                                start="0x80000000" size="0x40000000" init   ="0" default="0"/> <!-- 1GB DRAM -->

      <device Dname="ARMCA9">
        <processor Dcore="Cortex-A9" DcoreVersion="r4p1" Dfpu="DP_FPU" Dmpu="MPU" Dendian="Configurable" Dclock="12000000"/>
        <compile header="device/arm/ARMCA9/include/ARMCA9.h" define="ARMCA9"/>
      </device>
    </family>
  </devices>


  <apis>
    <!-- CMSIS Device API -->
    <api Cclass="Device" Cgroup="IRQ Controller" Capiversion="1.0.0" exclusive="1">
      <description>Device interrupt controller interface</description>
      <files>
        <file category="header" name="core_a/include/irq_ctrl.h"/>
      </files>
    </api>
    <api Cclass="Device" Cgroup="OS Tick" Capiversion="1.0.1" exclusive="1">
      <description>RTOS Kernel system tick timer interface</description>
      <files>
        <file category="header" name="rtos2/include/os_tick.h"/>
      </files>
    </api>
    <!-- CMSIS-RTOS API -->
    <api Cclass="CMSIS" Cgroup="RTOS2" Capiversion="2.1.3" exclusive="1">
      <description>CMSIS-RTOS API for Cortex-M, SC000, and SC300</description>
      <files>
        <file category="doc" name="doc/rtos2/index.html"/>
        <file category="header" name="rtos2/include/cmsis_os2.h"/>
      </files>
    </api>
    <!-- CMSIS Driver API -->
    <api Cclass="CMSIS Driver" Cgroup="USART" Capiversion="2.4.0" exclusive="0">
      <description>USART Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__usart__interface__gr.html" />
        <file category="header" name="driver/include/Driver_USART.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="SPI" Capiversion="2.3.0" exclusive="0">
      <description>SPI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__spi__interface__gr.html" />
        <file category="header" name="driver/include/Driver_SPI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="SAI" Capiversion="1.2.0" exclusive="0">
      <description>SAI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__sai__interface__gr.html"/>
        <file category="header" name="driver/include/Driver_SAI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="I2C" Capiversion="2.4.0" exclusive="0">
      <description>I2C Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__i2c__interface__gr.html"/>
        <file category="header" name="driver/include/Driver_I2C.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="CAN" Capiversion="1.3.0" exclusive="0">
      <description>CAN Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__can__interface__gr.html"/>
        <file category="header" name="driver/include/Driver_CAN.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Flash" Capiversion="2.3.0" exclusive="0">
      <description>Flash Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__flash__interface__gr.html" />
        <file category="header" name="driver/include/Driver_Flash.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="MCI" Capiversion="2.4.0" exclusive="0">
      <description>MCI Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__mci__interface__gr.html" />
        <file category="header" name="driver/include/Driver_MCI.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="NAND" Capiversion="2.4.0" exclusive="0">
      <description>NAND Flash Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__nand__interface__gr.html" />
        <file category="header" name="driver/include/Driver_NAND.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet MAC and PHY Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__eth__interface__gr.html" />
        <file category="header" name="driver/include/Driver_ETH_MAC.h" />
        <file category="header" name="driver/include/Driver_ETH_PHY.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet MAC Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__eth__mac__interface__gr.html" />
        <file category="header" name="driver/include/Driver_ETH_MAC.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="Ethernet PHY" Capiversion="2.2.0" exclusive="0">
      <description>Ethernet PHY Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__eth__phy__interface__gr.html" />
        <file category="header" name="driver/include/Driver_ETH_PHY.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="USB Device" Capiversion="2.3.0" exclusive="0">
      <description>USB Device Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__usbd__interface__gr.html" />
        <file category="header" name="driver/include/Driver_USBD.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="USB Host" Capiversion="2.3.0" exclusive="0">
      <description>USB Host Driver API for Cortex-M</description>
      <files>
        <file category="doc" name="doc/driver/group__usbh__interface__gr.html" />
        <file category="header" name="driver/include/Driver_USBH.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="WiFi" Capiversion="1.1.0" exclusive="0">
      <description>WiFi driver</description>
      <files>
        <file category="doc" name="doc/driver/group__wifi__interface__gr.html" />
        <file category="header" name="driver/include/Driver_WiFi.h" />
      </files>
    </api>
    <api Cclass="CMSIS Driver" Cgroup="VIO" Capiversion="0.1.0" exclusive="1">
      <description>Virtual I/O</description>
      <files>
        <file category="doc"    name="doc/driver/group__vio__interface__gr.html" />
        <file category="header" name="driver/vio/include/cmsis_vio.h" />
        <file category="other"  name="driver/vio/cmsis_vio.scvd" />
      </files>
    </api>
  </apis>

  <!-- conditions are dependency rules that can apply to a component or an individual file -->
  <conditions>
    <!-- compiler -->
    <condition id="ARMCC6">
      <accept Tcompiler="ARMCC" Toptions="AC6"/>
      <accept Tcompiler="ARMCC" Toptions="AC6LTO"/>
    </condition>
    <condition id="ARMCC5">
      <require Tcompiler="ARMCC" Toptions="AC5"/>
    </condition>
    <condition id="ARMCC">
      <require Tcompiler="ARMCC"/>
    </condition>
    <condition id="GCC">
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="IAR">
      <require Tcompiler="IAR"/>
    </condition>

    <!-- Arm architecture -->
    <condition id="ARMv6-M Device">
      <description>Armv6-M architecture based device</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M1"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="SC000"/>
    </condition>
    <condition id="ARMv7-M Device">
      <description>Armv7-M architecture based device</description>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
      <accept Dcore="SC300"/>
    </condition>
    <condition id="ARMv8-MBL Device">
      <description>Armv8-M base line architecture based device</description>
      <accept Dcore="ARMV8MBL"/>
      <accept Dcore="Cortex-M23"/>
    </condition>
    <condition id="ARMv8-MML Device">
      <description>Armv8-M main line architecture based device</description>
      <accept Dcore="ARMV8MML"/>
      <accept Dcore="Cortex-M33"/>
      <accept Dcore="Cortex-M35P"/>
      <accept Dcore="Star-MC1"/>
    </condition>
    <condition id="ARMv81-MML Device">
      <description>Armv8.1-M main line architecture based device</description>
      <accept Dcore="ARMV81MML"/>
      <accept Dcore="Cortex-M55"/>
      <accept Dcore="Cortex-M85"/>
    </condition>
    <condition id="ARMv8-M Device">
      <description>Armv8-M architecture based device</description>
      <accept condition="ARMv8-MBL Device"/>
      <accept condition="ARMv8-MML Device"/>
      <accept condition="ARMv81-MML Device"/>
    </condition>
    <condition id="ARMv6_7_8-M Device">
      <description>Armv6_7_8-M architecture based device</description>
      <accept condition="ARMv6-M Device"/>
      <accept condition="ARMv7-M Device"/>
      <accept condition="ARMv8-M Device"/>
    </condition>
    <condition id="ARMv7-A Device">
      <description>Armv7-A architecture based device</description>
      <accept Dcore="Cortex-A5"/>
      <accept Dcore="Cortex-A7"/>
      <accept Dcore="Cortex-A9"/>
    </condition>

    <condition id="TrustZone">
      <description>TrustZone</description>
      <require Dtz="TZ"/>
    </condition>
    <condition id="TZ Secure">
      <description>TrustZone (Secure)</description>
      <require Dtz="TZ"/>
      <require Dsecure="Secure"/>
    </condition>

    <!-- Startup -->
    <condition id="Startup ARMCC6 Secure">
      <description>Startup files for Arm Compiler 6 targeting TrustZone secure mode</description>
      <require condition="ARMCC6"/>
      <require condition="TZ Secure"/>
    </condition>
    <condition id="Startup ARMCC6 Unsecure">
      <description>Startup files for Arm Compiler 6 targeting non-TrustZone or TrustZone non-secure mode</description>
      <require condition="ARMCC6"/>
      <deny condition="TZ Secure"/>
    </condition>

    <!-- CMSIS-Core -->
    <condition id="ARMCM0 CMSIS">
      <description>Generic Arm Cortex-M0 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM0"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM0+ CMSIS">
      <description>Generic Arm Cortex-M0+ device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM0P*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM1 CMSIS">
      <description>Generic Arm Cortex-M1 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM1"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM3 CMSIS">
      <description>Generic Arm Cortex-M3 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM3"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM4 CMSIS">
      <description>Generic Arm Cortex-M4 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM4*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM7 CMSIS">
      <description>Generic Arm Cortex-M7 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM7*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM23 CMSIS">
      <description>Generic Arm Cortex-M23 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM23*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM33 CMSIS">
      <description>Generic Arm Cortex-M33 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM33*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM35P CMSIS">
      <description>Generic Arm Cortex-M35P device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM35P*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM55 CMSIS">
      <description>Generic Arm Cortex-M55 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM55*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCM85 CMSIS">
      <description>Generic Arm Cortex-M85 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCM85*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMSC000 CMSIS">
      <description>Generic Arm SC000 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMSC000"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMSC300 CMSIS">
      <description>Generic Arm SC300 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMSC300"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv8MBL CMSIS">
      <description>Generic Armv8-M Baseline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv8MML CMSIS">
      <description>Generic Armv8-M Mainline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv8MML*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMv81MML CMSIS">
      <description>Generic Armv8.1-M Mainline device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMv81MML*"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA5 CMSIS">
      <description>Generic Arm Cortex-A5 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA5"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA7 CMSIS">
      <description>Generic Arm Cortex-A7 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA7"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <condition id="ARMCA9 CMSIS">
      <description>Generic Arm Cortex-A9 device startup and depends on CMSIS Core</description>
      <require Dvendor="ARM:82" Dname="ARMCA9"/>
      <require Cclass="CMSIS" Cgroup="CORE"/>
    </condition>

    <!-- OS Tick -->
    <condition id="OS Tick PTIM">
      <description>Components required for OS Tick Private Timer</description>
      <accept Dcore="Cortex-A5"/>
      <accept Dcore="Cortex-A9"/>
      <require Cclass="Device" Cgroup="IRQ Controller"/>
    </condition>

    <condition id="OS Tick GTIM">
      <description>Components required for OS Tick Generic Physical Timer</description>
      <accept Dcore="Cortex-A7"/>
      <require Cclass="Device" Cgroup="IRQ Controller"/>
    </condition>

  </conditions>

  <components>
    <!-- CMSIS-Core component -->
    <component Cclass="CMSIS" Cgroup="CORE" Cversion="5.7.0"  condition="ARMv6_7_8-M Device" >
      <description>CMSIS-CORE for Cortex-M, SC000, SC300, Star-MC1, ARMv8-M, ARMv8.1-M</description>
      <files>
        <!-- CPU independent -->
        <file category="doc"     name="doc/core_m/index.html"/>
        <file category="include" name="core_m/include/"/>
        <file category="header"  name="core_m/include/tz_context.h" condition="TrustZone"/>
        <!-- Code template -->
        <file category="sourceC" attr="template" condition="TZ Secure" name="core_m/template/armv8-m/main_s.c"     version="1.1.1" select="Secure mode 'main' module for ARMv8-M"/>
        <file category="sourceC" attr="template" condition="TZ Secure" name="core_m/template/armv8-m/tz_context.c" version="1.1.1" select="RTOS Context Management (TrustZone for ARMv8-M)" />
      </files>
    </component>

    <component Cclass="CMSIS" Cgroup="CORE" Cversion="1.2.1"  condition="ARMv7-A Device" >
      <description>CMSIS-CORE for Cortex-A</description>
      <files>
        <!-- CPU independent -->
        <file category="doc"     name="doc/core_a/index.html"/>
        <file category="include" name="core_a/include/"/>
      </files>
    </component>

    <!-- CMSIS-Startup components -->
    <!-- Cortex-M0 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM0 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M0 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM0/include/ARMCM0.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM0/src/startup_ARMCM0.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM0/src/arm/ARMCM0_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM0/src/arm/ARMCM0_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM0/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM0/src/system_ARMCM0.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM0 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M0 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM0/include/ARMCM0.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM0/src/arm/startup_ARMCM0.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM0/src/gcc/startup_ARMCM0.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM0/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM0/src/iar/startup_ARMCM0.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM0/src/system_ARMCM0.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M0+ -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM0+ CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M0+ device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM0plus/include/ARMCM0plus.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM0plus/src/startup_ARMCM0plus.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM0plus/src/arm/ARMCM0plus_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM0plus/src/arm/ARMCM0plus_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM0plus/src/gcc/gcc_arm.ld"           version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM0plus/src/system_ARMCM0plus.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMCM0+ CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M0+ device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM0plus/include/ARMCM0plus.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM0plus/src/arm/startup_ARMCM0plus.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM0plus/src/gcc/startup_ARMCM0plus.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM0plus/src/gcc/gcc_arm.ld"           version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM0plus/src/iar/startup_ARMCM0plus.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM0plus/src/system_ARMCM0plus.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M1 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM1 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M1 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM1/include/ARMCM1.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM1/src/startup_ARMCM1.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM1/src/arm/ARMCM1_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM1/src/arm/ARMCM1_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM1/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM1/src/system_ARMCM1.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM1 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M1 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM1/include/ARMCM1.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM1/src/arm/startup_ARMCM1.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM1/src/gcc/startup_ARMCM1.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM1/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM1/src/iar/startup_ARMCM1.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM1/src/system_ARMCM1.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M3 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM3 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M3 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM3/include/ARMCM3.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM3/src/startup_ARMCM3.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM3/src/arm/ARMCM3_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM3/src/arm/ARMCM3_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM3/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM3/src/system_ARMCM3.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM3 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M3 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMCM3/include/ARMCM3.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM3/src/arm/startup_ARMCM3.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM3/src/gcc/startup_ARMCM3.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM3/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM3/src/iar/startup_ARMCM3.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM3/src/system_ARMCM3.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M4 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM4 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M4 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include" name="device/arm/ARMCM4/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM4/src/startup_ARMCM4.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM4/src/arm/ARMCM4_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM4/src/arm/ARMCM4_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM4/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
       <file category="sourceC"       name="device/arm/ARMCM4/src/system_ARMCM4.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM4 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M4 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include" name="device/arm/ARMCM4/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM4/src/arm/startup_ARMCM4.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM4/src/gcc/startup_ARMCM4.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM4/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM4/src/iar/startup_ARMCM4.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM4/src/system_ARMCM4.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M7 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMCM7 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCM7/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM7/src/startup_ARMCM7.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM7/src/arm/ARMCM7_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCM7/src/arm/ARMCM7_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM7/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM7/src/system_ARMCM7.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.2" condition="ARMCM7 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCM7/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM7/src/arm/startup_ARMCM7.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM7/src/gcc/startup_ARMCM7.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM7/src/gcc/gcc_arm.ld"       version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM7/src/iar/startup_ARMCM7.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM7/src/system_ARMCM7.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- Cortex-M23 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM23 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCM23/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM23/src/startup_ARMCM23.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/arm/ARMCM23_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/arm/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/gcc/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM23/src/system_ARMCM23.c"     version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM23/include/template/partition_ARMCM23.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMCM23 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M23 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCM23/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM23/src/arm/startup_ARMCM23.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/arm/ARMCM23_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/arm/ARMCM23_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="sourceAsm"    name="device/arm/ARMCM23/src/gcc/startup_ARMCM23.S"         version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM23/src/gcc/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM23/src/iar/startup_ARMCM23.s" version="1.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM23/src/system_ARMCM23.c"      version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM23/include/template/partition_ARMCM23.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M33 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM33 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCM33/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM33/src/startup_ARMCM33.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/arm/ARMCM33_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/arm/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/gcc/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM33/src/system_ARMCM33.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM33/include/template/partition_ARMCM33.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMCM33 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M33 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCM33/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM33/src/arm/startup_ARMCM33.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/arm/ARMCM33_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/arm/ARMCM33_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="sourceAsm"    name="device/arm/ARMCM33/src/gcc/startup_ARMCM33.S"         version="2.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM33/src/gcc/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM33/src/iar/startup_ARMCM33.s"         version="1.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM33/src/system_ARMCM33.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM33/include/template/partition_ARMCM33.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M35P -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMCM35P CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm Cortex-M35P device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCM35P/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM35P/src/startup_ARMCM35P.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/arm/ARMCM35P_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/arm/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM35P/src/system_ARMCM35P.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM35P/include/template/partition_ARMCM35P.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMCM35P CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm Cortex-M35P device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCM35P/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMCM35P/src/arm/startup_ARMCM35P.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/arm/ARMCM35P_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/arm/ARMCM35P_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="sourceAsm"    name="device/arm/ARMCM35P/src/gcc/startup_ARMCM35P.S"         version="1.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCM35P/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCM35P/src/iar/startup_ARMCM35P.s"         version="2.1.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCM35P/src/system_ARMCM35P.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM35P/include/template/partition_ARMCM35P.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M55 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="1.1.0" condition="ARMCM55 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Cortex-M55 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCM55/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM55/src/startup_ARMCM55.c"             version="1.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM55/src/arm/ARMCM55_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM55/src/arm/ARMCM55_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMCM55/src/gcc/gcc_arm.ld"                version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM55/src/system_ARMCM55.c"              version="1.1.0" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM55/include/template/partition_ARMCM55.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-M85 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="1.0.0" condition="ARMCM85 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Cortex-M85 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCM85/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMCM85/src/startup_ARMCM85.c"             version="1.0.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMCM85/src/arm/ARMCM85_ac6_s.sct"         version="1.0.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMCM85/src/arm/ARMCM85_ac6.sct"           version="1.0.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMCM85/src/gcc/gcc_arm.ld"                version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMCM85/src/system_ARMCM85.c"              version="1.0.0" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMCM85/include/template/partition_ARMCM85.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-SC000 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMSC000 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm SC000 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMSC000/include/ARMSC000.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMSC000/src/startup_ARMSC000.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMSC000/src/arm/ARMSC000_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMSC000/src/arm/ARMSC000_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMSC000/src/gcc/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMSC000/src/system_ARMSC000.c"      version="1.0.0" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.3" condition="ARMSC000 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm SC000 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMSC000/include/ARMSC000.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMSC000/src/arm/startup_ARMSC000.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMSC000/src/gcc/startup_ARMSC000.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMSC000/src/gcc/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMSC000/src/iar/startup_ARMSC000.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMSC000/src/system_ARMSC000.c"      version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-SC300 -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.0.3" condition="ARMSC300 CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Arm SC300 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMSC300/include/ARMSC300.h"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMSC300/src/startup_ARMSC300.c"     version="2.0.3" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMSC300/src/arm/ARMSC300_ac5.sct"   version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMSC300/src/arm/ARMSC300_ac6.sct"   version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMSC300/src/gcc/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMSC300/src/system_ARMSC300.c"      version="1.0.1" attr="config"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.3" condition="ARMSC300 CMSIS">
      <description>DEPRECATED: System and Startup for Generic Arm SC300 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="header"  name="device/arm/ARMSC300/include/ARMSC300.h"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMSC300/src/arm/startup_ARMSC300.s" version="1.0.1" attr="config" condition="ARMCC"/>
        <file category="sourceAsm"    name="device/arm/ARMSC300/src/gcc/startup_ARMSC300.S" version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMSC300/src/gcc/gcc_arm.ld"         version="2.1.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMSC300/src/iar/startup_ARMSC300.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMSC300/src/system_ARMSC300.c"      version="1.0.1" attr="config"/>
      </files>
    </component>

    <!-- ARMv8MBL -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMv8MBL CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8-M Baseline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMv8MBL/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMv8MBL/src/startup_ARMv8MBL.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/arm/ARMv8MBL_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/arm/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMv8MBL/src/system_ARMv8MBL.c"             version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMv8MBL/include/template/partition_ARMv8MBL.h" version="1.0.0" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.2.0" condition="ARMv8MBL CMSIS">
      <description>DEPRECATED: System and Startup for Generic Armv8-M Baseline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMv8MBL/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMv8MBL/src/arm/startup_ARMv8MBL.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/arm/ARMv8MBL_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/arm/ARMv8MBL_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="sourceAsm"    name="device/arm/ARMv8MBL/src/gcc/startup_ARMv8MBL.S"         version="2.2.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMv8MBL/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMv8MBL/src/system_ARMv8MBL.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMv8MBL/include/template/partition_ARMv8MBL.h" version="1.0.0" attr="config"/>
      </files>
    </component>

    <!-- ARMv8MML -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.1.0" condition="ARMv8MML CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMv8MML/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMv8MML/src/startup_ARMv8MML.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/arm/ARMv8MML_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/arm/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMv8MML/src/system_ARMv8MML.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMv8MML/include/template/partition_ARMv8MML.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.3.0" condition="ARMv8MML CMSIS">
      <description>DEPRECATED: System and Startup for Generic Armv8-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMv8MML/include/"/>
        <!-- startup / system file -->
        <file category="sourceAsm"    name="device/arm/ARMv8MML/src/arm/startup_ARMv8MML.S"         version="2.0.0" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/arm/ARMv8MML_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/arm/ARMv8MML_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="sourceAsm"    name="device/arm/ARMv8MML/src/gcc/startup_ARMv8MML.S"         version="2.3.0" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMv8MML/src/gcc/gcc_arm.ld"                 version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMv8MML/src/system_ARMv8MML.c"              version="1.0.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMv8MML/include/template/partition_ARMv8MML.h" version="1.1.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- ARMv81MML -->
    <component Cclass="Device" Cgroup="Startup" Cvariant="C Startup" Cversion="2.2.0" condition="ARMv81MML CMSIS" isDefaultVariant="true">
      <description>System and Startup for Generic Armv8.1-M Mainline device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMv81MML/include/"/>
        <!-- startup / system file -->
        <file category="sourceC"      name="device/arm/ARMv81MML/src/startup_ARMv81MML.c"             version="2.1.0" attr="config"/>
        <file category="linkerScript" name="device/arm/ARMv81MML/src/arm/ARMv81MML_ac6_s.sct"         version="1.1.0" attr="config" condition="Startup ARMCC6 Secure"/>
        <file category="linkerScript" name="device/arm/ARMv81MML/src/arm/ARMv81MML_ac6.sct"           version="1.1.0" attr="config" condition="Startup ARMCC6 Unsecure"/>
        <file category="linkerScript" name="device/arm/ARMv81MML/src/gcc/gcc_arm.ld"                  version="2.2.0" attr="config" condition="GCC"/>
        <file category="sourceC"      name="device/arm/ARMv81MML/src/system_ARMv81MML.c"              version="1.2.1" attr="config"/>
        <!-- SAU configuration -->
        <file category="header"       name="device/arm/ARMv81MML/include/template/partition_ARMv81MML.h" version="1.0.1" attr="config" condition="TZ Secure"/>
      </files>
    </component>

    <!-- Cortex-A5 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.1" condition="ARMCA5 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A5 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCA5/include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="device/arm/ARMCA5/src/ac5/startup_ARMCA5.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCA5/src/ac5/ARMCA5.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="device/arm/ARMCA5/src/ac6/startup_ARMCA5.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCA5/src/ac6/ARMCA5.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="device/arm/ARMCA5/src/gcc/startup_ARMCA5.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCA5/src/gcc/ARMCA5.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCA5/src/iar/startup_ARMCA5.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="device/arm/ARMCA5/src/iar/ARMCA5.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCA5/src/system_ARMCA5.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="device/arm/ARMCA5/src/mmu_ARMCA5.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA5/config/system_ARMCA5.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA5/config/mem_ARMCA5.h"         version="1.1.0" attr="config"/>

      </files>
    </component>

    <!-- Cortex-A7 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.1" condition="ARMCA7 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A7 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"      name="device/arm/ARMCA7/include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="device/arm/ARMCA7/src/ac5/startup_ARMCA7.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCA7/src/ac5/ARMCA7.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="device/arm/ARMCA7/src/ac6/startup_ARMCA7.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCA7/src/ac6/ARMCA7.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="device/arm/ARMCA7/src/gcc/startup_ARMCA7.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCA7/src/gcc/ARMCA7.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCA7/src/iar/startup_ARMCA7.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="device/arm/ARMCA7/src/iar/ARMCA7.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCA7/src/system_ARMCA7.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="device/arm/ARMCA7/src/mmu_ARMCA7.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA7/config/system_ARMCA7.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA7/config/mem_ARMCA7.h"         version="1.1.0" attr="config"/>
      </files>
    </component>

    <!-- Cortex-A9 -->
    <component Cclass="Device" Cgroup="Startup"                      Cversion="1.0.2" condition="ARMCA9 CMSIS">
      <description>System and Startup for Generic Arm Cortex-A9 device</description>
      <files>
        <!-- include folder / device header file -->
        <file category="include"  name="device/arm/ARMCA9/include/"/>
        <!-- startup / system / mmu files -->
        <file category="sourceC"      name="device/arm/ARMCA9/src/ac5/startup_ARMCA9.c" version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="linkerScript" name="device/arm/ARMCA9/src/ac5/ARMCA9.sct"       version="1.0.0" attr="config" condition="ARMCC5"/>
        <file category="sourceC"      name="device/arm/ARMCA9/src/ac6/startup_ARMCA9.c" version="1.0.1" attr="config" condition="ARMCC6"/>
        <file category="linkerScript" name="device/arm/ARMCA9/src/ac6/ARMCA9.sct"       version="1.0.0" attr="config" condition="ARMCC6"/>
        <file category="sourceC"      name="device/arm/ARMCA9/src/gcc/startup_ARMCA9.c" version="1.0.1" attr="config" condition="GCC"/>
        <file category="linkerScript" name="device/arm/ARMCA9/src/gcc/ARMCA9.ld"        version="1.0.0" attr="config" condition="GCC"/>
        <file category="sourceAsm"    name="device/arm/ARMCA9/src/iar/startup_ARMCA9.s" version="1.0.0" attr="config" condition="IAR"/>
        <file category="linkerScript" name="device/arm/ARMCA9/src/iar/ARMCA9.icf"       version="1.0.0" attr="config" condition="IAR"/>
        <file category="sourceC"      name="device/arm/ARMCA9/src/system_ARMCA9.c"      version="1.0.1" attr="config"/>
        <file category="sourceC"      name="device/arm/ARMCA9/src/mmu_ARMCA9.c"         version="1.2.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA9/config/system_ARMCA9.h"      version="1.0.0" attr="config"/>
        <file category="header"       name="device/arm/ARMCA9/config/mem_ARMCA9.h"         version="1.1.0" attr="config"/>
      </files>
    </component>

    <!-- IRQ Controller -->
    <component Cclass="Device" Cgroup="IRQ Controller" Csub="GIC" Capiversion="1.0.0" Cversion="1.2.0" condition="ARMv7-A Device">
      <description>IRQ Controller implementation using GIC</description>
      <files>
        <file category="sourceC" name="core_a/src/irq_ctrl_gic.c"/>
      </files>
    </component>

    <!-- OS Tick -->
    <component Cclass="Device" Cgroup="OS Tick" Csub="Private Timer" Capiversion="1.0.1" Cversion="1.0.2" condition="OS Tick PTIM">
      <description>OS Tick implementation using Private Timer</description>
      <files>
        <file category="sourceC" name="rtos2/src/os_tick_ptim.c"/>
      </files>
    </component>

    <component Cclass="Device" Cgroup="OS Tick" Csub="Generic Physical Timer" Capiversion="1.0.1" Cversion="1.0.1" condition="OS Tick GTIM">
      <description>OS Tick implementation using Generic Physical Timer</description>
      <files>
        <file category="sourceC" name="rtos2/src/os_tick_gtim.c"/>
      </files>
    </component>

    <!-- CMSIS-Driver Custom components -->
    <component Cclass="CMSIS Driver" Cgroup="USART" Csub="Custom" Cversion="1.0.0" Capiversion="2.4.0" custom="1">
      <description>Access to #include Driver_USART.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_USART.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_USART.c" select="USART Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SPI" Csub="Custom" Cversion="1.0.0" Capiversion="2.3.0" custom="1">
      <description>Access to #include Driver_SPI.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_SPI.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_SPI.c" select="SPI Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="SAI" Csub="Custom" Cversion="1.0.0" Capiversion="1.2.0" custom="1">
      <description>Access to #include Driver_SAI.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_SAI.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_SAI.c" select="SAI Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="I2C" Csub="Custom" Cversion="1.0.0" Capiversion="2.4.0" custom="1">
      <description>Access to #include Driver_I2C.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_I2C.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_I2C.c" select="I2C Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="CAN" Csub="Custom" Cversion="1.0.0" Capiversion="1.3.0" custom="1">
      <description>Access to #include Driver_CAN.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_CAN.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_CAN.c" select="CAN Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Flash" Csub="Custom" Cversion="1.0.0" Capiversion="2.3.0" custom="1">
      <description>Access to #include Driver_Flash.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_Flash.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_Flash.c" select="Flash Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="MCI" Csub="Custom" Cversion="1.0.0" Capiversion="2.4.0" custom="1">
      <description>Access to #include Driver_MCI.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_MCI.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_MCI.c" select="MCI Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="NAND" Csub="Custom" Cversion="1.0.0" Capiversion="2.4.0" custom="1">
      <description>Access to #include Driver_NAND.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_NAND.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_NAND.c" select="NAND Flash Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Ethernet" Csub="Custom" Cversion="1.0.0" Capiversion="2.2.0" custom="1">
      <description>Access to #include Driver_ETH_PHY/MAC.h files and code templates for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_ETH_MAC.h" />
        <file category="header" name="driver/include/Driver_ETH_PHY.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_ETH_PHY.c" select="Ethernet PHY and MAC Driver"/>
        <file category="sourceC" attr="template" name="driver/template/Driver_ETH_MAC.c" select="Ethernet PHY and MAC Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Ethernet MAC" Csub="Custom" Cversion="1.0.0" Capiversion="2.2.0" custom="1">
      <description>Access to #include Driver_ETH_MAC.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_ETH_MAC.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_ETH_MAC.c" select="Ethernet MAC Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="Ethernet PHY" Csub="Custom" Cversion="1.0.0" Capiversion="2.2.0" custom="1">
      <description>Access to #include Driver_ETH_PHY.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_ETH_PHY.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_ETH_PHY.c" select="Ethernet PHY Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Device" Csub="Custom" Cversion="1.0.0" Capiversion="2.3.0" custom="1">
      <description>Access to #include Driver_USBD.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_USBD.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_USBD.c" select="USB Device Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="USB Host" Csub="Custom" Cversion="1.0.0" Capiversion="2.3.0" custom="1">
      <description>Access to #include Driver_USBH.h file and code template for custom implementation</description>
      <files>
        <file category="header" name="driver/include/Driver_USBH.h" />
        <file category="sourceC" attr="template" name="driver/template/Driver_USBH.c" select="USB Host Driver"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="WiFi" Csub="Custom" Cversion="1.0.0" Capiversion="1.1.0" custom="1">
      <description>Access to #include Driver_WiFi.h file</description>
      <files>
        <file category="header" name="driver/include/Driver_WiFi.h"/>
        <file category="sourceC" attr="template" name="driver/template/Driver_WiFi.c" select="WiFi Driver"/>
      </files>
    </component>

    <!-- VIO components -->
    <component Cclass="CMSIS Driver" Cgroup="VIO" Csub="Custom" Cversion="1.0.0" Capiversion="0.1.0" custom="1">
      <description>Virtual I/O custom implementation template</description>
      <files>
        <file category="sourceC" name="driver/vio/src/vio.c" attr="template" select="Virtual I/O"/>
      </files>
    </component>
    <component Cclass="CMSIS Driver" Cgroup="VIO" Csub="Virtual" Cversion="1.0.0" Capiversion="0.1.0">
      <description>Virtual I/O implementation using memory only</description>
      <files>
        <file category="sourceC" name="driver/vio/src/vio_memory.c"/>
      </files>
    </component>

  </components>

  <boards>
    <board name="uVision Simulator" vendor="Keil">
      <description>uVision Simulator</description>
      <mountedDevice    deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P_MPU"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM1"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM3"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv81MML_DSP_DP_MVE_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM55"/>
    </board>

    <board name="EWARM Simulator" vendor="IAR">
      <description>EWARM Simulator</description>
      <mountedDevice    deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM0P_MPU"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM1"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM3"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM4_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM7_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MBL"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_SP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv8MML_DP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMv81MML_DSP_DP_MVE_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM23_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM33_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM35P_DSP_FP_TZ"/>
      <compatibleDevice deviceIndex="0" Dvendor="ARM:82" Dname="ARMCM55"/>
    </board>
  </boards>

</package>
